<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.safari.mapper.IScheduleMapper">
	<!-- 일정 리스트(일정, 일정 멤버, 일정 댓글 -->
	<resultMap type="com.gd.safari.vo.ScheduleList" id="resultScheduleList">
		<result column="schedule_no" property="scheduleNo"/>
		<result column="schedule_writer" property="scheduleWriter"/>
		<result column="writer_name" property="workMemberName"/>
		<result column="schedule_start" property="scheduleStart"/>
		<result column="schedule_end" property="scheduleEnd"/>
		<result column="schedule_title" property="scheduleTitle"/>
		<result column="schedule_location" property="scheduleLocation"/>
		<result column="schedule_detail_location" property="scheduleDetailLocation"/>
		<result column="schedule_content" property="scheduleContent"/>
		<result column="schedule_auth" property="scheduleAuth"/>
		<result column="create_date" property="createDate"/>
		<result column="writer_filename" property="writerFilename"/>
		<result column="writer_file_ext" property="writerFileExt"/>
		<result column="schedule_like_cnt" property="scheduleLikeCnt"/>
		<collection property="scheduleMembers" ofType="com.gd.safari.vo.ScheduleMemberList">
			<id column="schedule_no" property="scheduleNo"/>
			<id column="schedule_member_email" property="scheduleMemberEmail"/>
			<result column="schedule_attend" property="scheduleAttend"/>
			<result column="work_member_name" property="workMemberName"/>
			<result column="filename" property="filename"/>
			<result column="file_ext" property="fileExt"/>
		</collection>
		<collection property="scheduleComments" ofType="com.gd.safari.vo.ScheduleCommentList">
			<id column="schedule_cmt_no" property="scheduleCmtNo"/>
			<result column="cmt_member_email" property="cmtMemberEmail"/>
			<result column="cmt_writer" property="cmtWorkMemberName"/>
			<result column="schedule_cmt_content" property="scheduleCmtContent"/>
			<result column="cmt_create_date" property="cmtCreateDate"/>
			<result column="cmt_filename" property="cmtFilename"/>
			<result column="cmt_file_ext" property="cmtFileExt"/>
			<result column="schedule_no" property="scheduleNo"/>
			<result column="cmt_like_cnt" property="cmtLikeCnt"/>
		</collection>
		<collection property="scheduleAttendances" ofType="com.gd.safari.vo.ScheduleAttendList">
			<result column="schedule_no" property="scheduleNo"/>
			<result column="schedule_attendance" property="scheduleAttendance"/>
			<result column="attend_cnt" property="attendCnt"/>
		</collection>
	</resultMap>
	<select id="selectScheduleList" parameterType="map" resultMap="resultScheduleList">
		SELECT
			<!-- 일정 리스트 -->
			s.schedule_no
			, s.schedule_writer 
			, s.work_member_name writer_name
			, s.schedule_start	
			, s.schedule_end  
			, s.schedule_title 
			, s.schedule_location 
			, s.schedule_detail_location 
			, s.schedule_content 
			, s.schedule_auth 
			, s.create_date
			, s.writer_filename
			, s.writer_file_ext
			, IFNULL(s.scheduleLikeCnt,0) schedule_like_cnt 
			<!-- 일정 멤버 리스트 -->
			, sm.schedule_member_email  
			, sm.schedule_attend
			, sm.work_member_name
			, sm.filename
			, sm.file_ext
			<!-- 일정 댓글 리스트 -->
			, sc.schedule_cmt_no 
			, sc.cmt_member_email
			, sc.cmt_writer 
			, sc.schedule_cmt_content 
			, sc.cmt_create_date
			, sc.cmt_filename
			, sc.cmt_file_ext
			, IFNULL(sc.cmtLikeCnt,0) cmt_like_cnt
			<!-- 참석 여부 cnt -->
			, ac.schedule_attendance
			, ac.attend_cnt
		FROM
			(
			SELECT
				s3.schedule_no
				, s3.project_no
				, s3.schedule_writer 
				, s3.schedule_start	
				, s3.schedule_end  
				, s3.schedule_title 
				, s3.schedule_location 
				, s3.schedule_detail_location 
				, s3.schedule_content 
				, s3.schedule_auth 
				, s3.create_date
				, s3.work_member_name
				, s3.writer_filename
				, s3.writer_file_ext
				, slc.scheduleLikeCnt
			FROM
				(
				SELECT 
					s1.schedule_no
					, s1.project_no
					, s1.schedule_writer 
					, s1.schedule_start	
					, s1.schedule_end  
					, s1.schedule_title 
					, s1.schedule_location 
					, s1.schedule_detail_location 
					, s1.schedule_content 
					, s1.schedule_auth 
					, s1.create_date
					, vwm1.work_member_name
					, vwm1.filename writer_filename
					, vwm1.file_ext writer_file_ext
				FROM 
					schedule s1
				INNER JOIN 
					v_workspace_member vwm1 
				ON 
					s1.schedule_writer = vwm1.work_member_email
				WHERE 
					vwm1.work_no = #{workNo} <!-- 세션값 -->
				) s3
			LEFT OUTER JOIN
				(
				SELECT
					schedule_no
					, count(*) scheduleLikeCnt
				FROM
					schedule_like
				GROUP BY
					schedule_no
				) slc
			ON
				s3.schedule_no = slc.schedule_no
			) s
		LEFT OUTER JOIN 
			(
			SELECT
				sm1.schedule_no
				, sm1.schedule_member_email  
				, sm1.schedule_attend
			 	, vwm.work_member_name
				, vwm.filename
				, vwm.file_ext
			FROM
				schedule_member sm1
			INNER JOIN 
				v_workspace_member vwm 
			ON 
				sm1.schedule_member_email = vwm.work_member_email
			where
				vwm.work_no = #{workNo} <!-- 세션값 -->
			) sm 
		ON 
			s.schedule_no = sm.schedule_no
		LEFT OUTER JOIN 
			(
			SELECT
				sc2.cmt_writer
				, sc2.schedule_no
				, sc2.schedule_cmt_no 
				, sc2.cmt_member_email 
				, sc2.schedule_cmt_content 
				, sc2.cmt_create_date
				, sc2.cmt_filename
				, sc2.cmt_file_ext
				, clc.cmtLikeCnt
			FROM
				(
				SELECT
					
					sc1.schedule_no
					, vwm2.work_member_name cmt_writer
					, sc1.schedule_cmt_no 
					, sc1.cmt_member_email 
					, sc1.schedule_cmt_content 
					, sc1.cmt_create_date
					, vwm2.filename cmt_filename
					, vwm2.file_ext cmt_file_ext
				FROM 
					schedule_comment sc1  
				INNER JOIN 
					v_workspace_member vwm2 
				ON 
					sc1.cmt_member_email = vwm2.work_member_email 
				WHERE 
					vwm2.work_no = #{workNo} <!-- 세션값 -->
				) sc2
				LEFT OUTER JOIN
					(
					SELECT
						schedule_cmt_no
						, count(*) cmtLikeCnt 
					FROM
						schedule_comment_like
					GROUP BY
						schedule_cmt_no
					) clc
				ON
					sc2.schedule_cmt_no = clc.schedule_cmt_no
			) sc
		ON 
			s.schedule_no = sc.schedule_no
		INNER JOIN
			(
			SELECT 
				s4.schedule_no
				, sm2.schedule_attend schedule_attendance
				, COUNT(sm2.schedule_attend) attend_cnt
			FROM 
				schedule s4 
			INNER JOIN 
				schedule_member sm2
			ON
				s4.schedule_no = sm2.schedule_no
			GROUP BY
				s4.schedule_no, sm2.schedule_attend
			) ac
		ON 
			s.schedule_no = ac.schedule_no
		WHERE
			s.project_no = #{projectNo} <!-- 세션값 -->
		<!-- 일정 검색 동적쿼리 -->
		<if test="search != null">
		AND
			(
				s.schedule_title LIKE CONCAT('%', #{search}, '%') <!-- 일정 제목 검색 -->
			OR
				s.schedule_content LIKE CONCAT('%', #{search}, '%') <!-- 일정 내용 검색 -->
			OR
				s.work_member_name LIKE CONCAT('%', #{search}, '%') <!-- 일정 작성자 이름 검색 -->
			)
		OR
			s.schedule_no 
		IN
			(
				SELECT
					sm2.schedule_no
				FROM
					schedule_member sm2
				INNER JOIN
					v_workspace_member vwm3
				ON
					sm2.schedule_member_email = vwm3.work_member_email
				WHERE
					vwm3.work_no = #{workNo}
				AND
					vwm3.work_member_name LIKE CONCAT('%', #{search}, '%') <!-- 일정 참석자 이름 검색 -->
			)
		</if>
		ORDER BY
			s.schedule_no DESC, sc.cmt_create_date ASC
	</select>

	<!-- 일정 생성하기 -->
	<insert id="insertSchedule" parameterType="map">
		<selectKey keyProperty="scheduleNo" resultType="int" order="AFTER">
			<!-- 일정 생성 후 해당 일정 번호를 가져온다. -->
			SELECT LAST_INSERT_ID() as scheduleNo
		</selectKey>
		INSERT INTO schedule (
			project_no
			, schedule_writer
			, schedule_start
			, schedule_end
			, schedule_title
			
			<if test="!''.equals(scheduleLocation)">
				, schedule_location
				, schedule_detail_location
			</if>
			, schedule_content
			, schedule_auth
			, create_date
			, update_date
		) VALUES (
			#{projectNo}		<!-- 세션값 -->
			, #{scheduleWriter} <!-- 세션값 -->
			, #{scheduleStart}
			, #{scheduleEnd}
			, #{scheduleTitle}
			<if test="!''.equals(scheduleLocation)">
				, #{scheduleLocation}
				, #{scheduleDetailLocation}
			</if>
			, #{scheduleContent}
			, #{scheduleAuth}
			, NOW()
			, NOW()
		) 
	</insert>
	
	<!-- 일정 한개 데이터 조회 -->
	<select id="selectScheduleOneByScheduleNo" resultType="com.gd.safari.vo.Schedule" parameterType="int">
		SELECT
			schedule_no 	 			scheduleNo
			, schedule_title 			scheduleTitle
			, schedule_start 			scheduleStart
			, schedule_end				scheduleEnd
			, schedule_location			scheduleLocation
			, schedule_detail_location 	scheduleDetailLocation
			, schedule_content 			scheduleContent
			, schedule_auth 			scheduleAuth
		FROM
			schedule
		WHERE
			schedule_no = #{scheduleNo}
	</select>
	
	<!-- 일정 수정하기 -->
	<update id="updateSchedule" parameterType="map">
		UPDATE
			schedule
		SET
			schedule_title = #{scheduleTitle}
			, schedule_start = #{scheduleStart} 	
			, schedule_end = #{scheduleEnd}
			, schedule_location	= #{scheduleLocation}
			, schedule_detail_location = #{scheduleDetailLocation}
			, schedule_content = #{scheduleContent}
			, schedule_auth = #{scheduleAuth}
			, update_date = NOW()
		WHERE
			schedule_no = #{scheduleNo}
	</update>
	
	<!-- 일정 삭제하기 -->
	<delete id="deleteSchedule" parameterType="int">
		DELETE FROM
			schedule
		WHERE
			schedule_no = #{scheduleNo}
	</delete>
	
	<!-- 프로젝트 내 일정 번호 전체 조회  -->
	<!-- On Delete CASCADE 사용하기로 변경 -> 조회할 필요 없음 -->
	<!-- <select id="selectScheduleNoByProjectNo" parameterType="int" resultType="int">
		SELECT
			schedule_no scheduleNo
		FROM
			schedule
		WHERE
			project_no = #{projectNo}
	</select> -->
	
	<!-- 프로젝트 삭제시 일정 전체 삭제 -->
	<delete id="deleteScheduleByProjectNo" parameterType="int">
		DELETE FROM
			schedule
		WHERE
			project_no = #{projectNo}
	</delete>
</mapper>